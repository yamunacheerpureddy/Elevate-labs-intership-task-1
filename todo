{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d5fd1eb-d98d-4674-bc29-81b2656d16d4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "==================================================\n",
      "         To-Do List Manager (CSV Version)         \n",
      "==================================================\n",
      "1. View Tasks\n",
      "2. Add Task\n",
      "3. Delete Task\n",
      "4. Mark Task as Complete\n",
      "5. Exit\n",
      "==================================================\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your choice (1-5):  1\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No tasks in your to-do list.\n",
      "\n",
      "==================================================\n",
      "         To-Do List Manager (CSV Version)         \n",
      "==================================================\n",
      "1. View Tasks\n",
      "2. Add Task\n",
      "3. Delete Task\n",
      "4. Mark Task as Complete\n",
      "5. Exit\n",
      "==================================================\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your choice (1-5):  2\n",
      "Enter the task:  Homework\n",
      "Priority (Low/Normal/High):  low\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Homework' task added successfully!\n",
      "\n",
      "==================================================\n",
      "         To-Do List Manager (CSV Version)         \n",
      "==================================================\n",
      "1. View Tasks\n",
      "2. Add Task\n",
      "3. Delete Task\n",
      "4. Mark Task as Complete\n",
      "5. Exit\n",
      "==================================================\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your choice (1-5):  1\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Your To-Do List:\n",
      "--------------------------------------------------\n",
      "No.  Task                Priority       Status    \n",
      "--------------------------------------------------\n",
      "1    Homework            Low            Pending   \n",
      "\n",
      "\n",
      "==================================================\n",
      "         To-Do List Manager (CSV Version)         \n",
      "==================================================\n",
      "1. View Tasks\n",
      "2. Add Task\n",
      "3. Delete Task\n",
      "4. Mark Task as Complete\n",
      "5. Exit\n",
      "==================================================\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your choice (1-5):  4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Your To-Do List:\n",
      "--------------------------------------------------\n",
      "No.  Task                Priority       Status    \n",
      "--------------------------------------------------\n",
      "1    Homework            Low            Pending   \n",
      "\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter task number to mark as complete:  1\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Task 'Homework' marked as completed!\n",
      "\n",
      "==================================================\n",
      "         To-Do List Manager (CSV Version)         \n",
      "==================================================\n",
      "1. View Tasks\n",
      "2. Add Task\n",
      "3. Delete Task\n",
      "4. Mark Task as Complete\n",
      "5. Exit\n",
      "==================================================\n"
     ]
    }
   ],
   "source": [
    "import csv\n",
    "import os\n",
    "\n",
    "class ToDo:\n",
    "    def __init__(self, name, priority, status=\"Pending\"):\n",
    "        self.name = name\n",
    "        self.priority = priority\n",
    "        self.status = status\n",
    "\n",
    "class ToDoList:\n",
    "    def __init__(self, filename=\"tasks.csv\"):\n",
    "        self.filename = filename\n",
    "        self.tasks = self.load_tasks()\n",
    "    \n",
    "    def load_tasks(self):\n",
    "        tasks = []\n",
    "        if os.path.exists(self.filename):\n",
    "            with open(self.filename, mode='r') as file:\n",
    "                reader = csv.reader(file)\n",
    "                for row in reader:\n",
    "                    if row:  # Skip empty rows\n",
    "                        tasks.append(ToDo(row[0], row[1], row[2]))\n",
    "        return tasks\n",
    "    \n",
    "    def save_tasks(self):\n",
    "        with open(self.filename, mode='w', newline='') as file:\n",
    "            writer = csv.writer(file)\n",
    "            for task in self.tasks:\n",
    "                writer.writerow([task.name, task.priority, task.status])\n",
    "    \n",
    "    def add_task(self, name, priority, status=\"Pending\"):\n",
    "        new_task = ToDo(name, priority, status)\n",
    "        self.tasks.append(new_task)\n",
    "        self.save_tasks()\n",
    "        print(f\"'{name}' task added successfully!\")\n",
    "    \n",
    "    def view_tasks(self):\n",
    "        if not self.tasks:\n",
    "            print(\"No tasks in your to-do list.\")\n",
    "            return\n",
    "        \n",
    "        print(\"\\nYour To-Do List:\")\n",
    "        print(\"-\" * 50)\n",
    "        print(f\"{'No.':<5}{'Task':<20}{'Priority':<15}{'Status':<10}\")\n",
    "        print(\"-\" * 50)\n",
    "        for i, task in enumerate(self.tasks, 1):\n",
    "            print(f\"{i:<5}{task.name:<20}{task.priority:<15}{task.status:<10}\")\n",
    "        print()\n",
    "    \n",
    "    def delete_task(self, task_number):\n",
    "        try:\n",
    "            task_index = int(task_number) - 1\n",
    "            if 0 <= task_index < len(self.tasks):\n",
    "                removed_task = self.tasks.pop(task_index)\n",
    "                self.save_tasks()\n",
    "                print(f\"Task '{removed_task.name}' deleted successfully!\")\n",
    "            else:\n",
    "                print(\"Invalid task number.\")\n",
    "        except ValueError:\n",
    "            print(\"Please enter a valid number.\")\n",
    "    \n",
    "    def mark_complete(self, task_number):\n",
    "        try:\n",
    "            task_index = int(task_number) - 1\n",
    "            if 0 <= task_index < len(self.tasks):\n",
    "                self.tasks[task_index].status = \"Completed\"\n",
    "                self.save_tasks()\n",
    "                print(f\"Task '{self.tasks[task_index].name}' marked as completed!\")\n",
    "            else:\n",
    "                print(\"Invalid task number.\")\n",
    "        except ValueError:\n",
    "            print(\"Please enter a valid number.\")\n",
    "\n",
    "def main():\n",
    "    todo = ToDoList()\n",
    "    \n",
    "    while True:\n",
    "        print(\"\\n\" + \"=\" * 50)\n",
    "        print(\"To-Do List Manager (CSV Version)\".center(50))\n",
    "        print(\"=\" * 50)\n",
    "        print(\"1. View Tasks\")\n",
    "        print(\"2. Add Task\")\n",
    "        print(\"3. Delete Task\")\n",
    "        print(\"4. Mark Task as Complete\")\n",
    "        print(\"5. Exit\")\n",
    "        print(\"=\" * 50)\n",
    "        \n",
    "        try:\n",
    "            choice = int(input(\"Enter your choice (1-5): \"))\n",
    "            \n",
    "            if choice == 1:\n",
    "                todo.view_tasks()\n",
    "            elif choice == 2:\n",
    "                name = input(\"Enter the task: \")\n",
    "                priority = input(\"Priority (Low/Normal/High): \").capitalize()\n",
    "                while priority not in [\"Low\", \"Normal\", \"High\"]:\n",
    "                    print(\"Invalid priority! Please enter Low, Normal, or High\")\n",
    "                    priority = input(\"Priority (Low/Normal/High): \").capitalize()\n",
    "                todo.add_task(name, priority)\n",
    "            elif choice == 3:\n",
    "                todo.view_tasks()\n",
    "                if todo.tasks:\n",
    "                    task_num = input(\"Enter task number to delete: \")\n",
    "                    todo.delete_task(task_num)\n",
    "            elif choice == 4:\n",
    "                todo.view_tasks()\n",
    "                if todo.tasks:\n",
    "                    task_num = input(\"Enter task number to mark as complete: \")\n",
    "                    todo.mark_complete(task_num)\n",
    "            elif choice == 5:\n",
    "                print(\"Thank you for using the To-Do List System!\")\n",
    "                break\n",
    "            else:\n",
    "                print(\"Invalid choice. Please enter a number between 1-5.\")\n",
    "        except ValueError:\n",
    "            print(\"Invalid input. Please enter a number.\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d90f2d2f-ac54-42c9-b6cc-2e36d5b29fea",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
